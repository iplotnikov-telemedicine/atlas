<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/igor.i.plotnikov/PycharmProjects/work/checklists/DB.sqlite3" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="23000"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainACTIONS"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">CREATE VIEW LAST_INSTALLMENTS AS
	
WITH split(word, str, periods) AS (
    -- alternatively put your query here
    -- SELECT '', category||',' FROM categories
    SELECT '', INSTALLMENT_PERIODS||',', INSTALLMENT_PERIODS
    FROM LAST_CHANGES
    WHERE IS_INSTALLMENT=1
    GROUP BY 1,2,3
    
    UNION ALL
    
    SELECT
	    substr(str, 0, instr(str, ',')),
	    substr(str, instr(str, ',')+1),
	    periods
    FROM split WHERE str!=''
),

INST as (
	SELECT
		periods as INST_PERIODS,
		word as INST_PERIOD_TEXT,
		CAST(word as FLOAT) as INST_PERIOD_FLOAT
	FROM split
	WHERE word!=''
),


CALC as (
	SELECT
		LAST_CHANGES.BRANCH_NAME,
		LAST_CHANGES.BRANCH_ID,
		LAST_CHANGES.PRODUCT_CLUSTER_NAME,
		LAST_CHANGES.DB_ID,
		LAST_CHANGES.REG_CODE,
		LAST_CHANGES.MACRO_CC_NAME,
		LAST_CHANGES.LAUNCH_NAME,
		LAST_CHANGES.TARIFF,
		LAST_CHANGES.FEE_TYPE,
		CASE LAST_CHANGES.FEE_TYPE
			WHEN 'Сутки' THEN 1
			WHEN 'Плавающий месяц' THEN 30
			ELSE CAST(REPLACE(LAST_CHANGES.FEE_TYPE, ' дней', '') AS INTEGER)
		END as DENOMINATOR_DAYS,
		LAST_CHANGES.FEE,
		CASE WHEN INST.INST_PERIOD_FLOAT IN (5,10,15)
			THEN LAST_CHANGES.FEE_AFTER_DISCOUNT ELSE NULL END as FEE_AFTER_DISCOUNT,
		INST.INST_PERIOD_FLOAT,
		CASE WHEN INST.INST_PERIOD_FLOAT IN (5,10,15)
			THEN 1 ELSE 0 END as IS_STANDARD_PERIOD,
		LAST_CHANGES.VOICE_MIN,
		LAST_CHANGES.DATA_GB,
		INST.INST_PERIOD_TEXT || ' дней' as INSTALLMENT_TYPE,
		LAST_CHANGES.STATUS,
		LAST_CHANGES.USERNAME,
		LAST_CHANGES.DATE_TIME,
		LAST_CHANGES.IS_ACTUAL,
		LAST_CHANGES.LAUNCH_TYPE
	FROM LAST_CHANGES
	INNER JOIN INST
		ON LAST_CHANGES.INSTALLMENT_PERIODS = INST.INST_PERIODS
	WHERE LAST_CHANGES.IS_INSTALLMENT = 1
),



CALC1 as (
	SELECT
		BRANCH_NAME,
		BRANCH_ID,
		PRODUCT_CLUSTER_NAME,
		DB_ID,
		REG_CODE,
		MACRO_CC_NAME,
		LAUNCH_NAME,
		TARIFF,
		DENOMINATOR_DAYS,
		FEE,
		FEE_AFTER_DISCOUNT,
		VOICE_MIN,
		DATA_GB,
		INSTALLMENT_TYPE,
		ROUND((FEE * INST_PERIOD_FLOAT / DENOMINATOR_DAYS / 5)-0.4999999, 0) * 5  as INSTALLMENT_FEE,
		CASE WHEN IS_STANDARD_PERIOD = 1
			AND FEE_AFTER_DISCOUNT IS NOT NULL THEN 1 ELSE 0 END as IS_INSTALLMENT_DISCOUNT,
		CASE WHEN IS_STANDARD_PERIOD = 1
			AND FEE_AFTER_DISCOUNT IS NOT NULL THEN 'Со скидкой' ELSE 'Без скидки' END as INST_DISCOUNT_TEXT,
		CASE WHEN IS_STANDARD_PERIOD = 1
			THEN ROUND((FEE_AFTER_DISCOUNT * INST_PERIOD_FLOAT / DENOMINATOR_DAYS / 5)-0.4999999, 0) * 5  
			ELSE NULL END as INSTALLMENT_FEE_AFTER_DISCOUNT,
		ROUND((VOICE_MIN * INST_PERIOD_FLOAT / DENOMINATOR_DAYS / 5) + 0.4999999, 0) * 5  as INSTALLMENT_MIN,
		ROUND((DATA_GB * INST_PERIOD_FLOAT / DENOMINATOR_DAYS / 0.5) + 0.4999999, 0) * 0.5  as INSTALLMENT_GB,
		STATUS,
		USERNAME,
		DATE_TIME,
		IS_ACTUAL,
		LAUNCH_TYPE
	FROM CALC
)

SELECT
	BRANCH_NAME,
	BRANCH_ID,
	PRODUCT_CLUSTER_NAME,
	DB_ID,
	REG_CODE,
	MACRO_CC_NAME,
	LAUNCH_NAME,
	TARIFF,
	DENOMINATOR_DAYS,
	FEE,
	NULL as FEE_AFTER_DISCOUNT,
	VOICE_MIN,
	DATA_GB,
	INSTALLMENT_TYPE,
	INSTALLMENT_FEE,
	IS_INSTALLMENT_DISCOUNT,
	INST_DISCOUNT_TEXT,
	INSTALLMENT_FEE_AFTER_DISCOUNT,
	INSTALLMENT_MIN,
	INSTALLMENT_GB,
	STATUS,
	USERNAME,
	DATE_TIME,
	IS_ACTUAL,
	LAUNCH_TYPE
FROM CALC1

UNION ALL

SELECT
	BRANCH_NAME,
	BRANCH_ID,
	PRODUCT_CLUSTER_NAME,
	DB_ID,
	REG_CODE,
	MACRO_CC_NAME,
	LAUNCH_NAME,
	TARIFF,
	DENOMINATOR_DAYS,
	FEE,
	NULL as FEE_AFTER_DISCOUNT,
	VOICE_MIN,
	DATA_GB,
	INSTALLMENT_TYPE,
	INSTALLMENT_FEE,
	0 as IS_INSTALLMENT_DISCOUNT,
	'Без скидки' as INST_DISCOUNT_TEXT,
	NULL as INSTALLMENT_FEE_AFTER_DISCOUNT,
	INSTALLMENT_MIN,
	INSTALLMENT_GB,
	STATUS,
	USERNAME,
	DATE_TIME,
	IS_ACTUAL,
	LAUNCH_TYPE
FROM CALC1
WHERE PRODUCT_CLUSTER_NAME = 'Moscow'
	and IS_INSTALLMENT_DISCOUNT = 1</sql><sql name="SQL 2">
DROP VIEW MARKET_CLEAN;
CREATE VIEW MARKET_CLEAN AS
WITH DATES AS (	
	SELECT MAX(REPORT_DATE) AS MAX_DATE
	FROM MARKET
),

A AS (
	SELECT
		REGION_NAME,
		OPERATOR,
		REPLACE(TARIFF_NAME, ' +', '+') AS TARIFF_NAME,
		FEE_TYPE,
		CAST(IS_SHELF AS INTEGER) AS IS_SHELF,
		CAST(CASE WHEN INSTR(FEE_STR, '/')&gt;0 THEN
			SUBSTR(FEE_STR, 1, INSTR(FEE_STR, '/')-1)
			ELSE FEE_STR
		END AS INTEGER) AS FEE,
		CASE WHEN FEE_STR LIKE '%/%' THEN 1 ELSE 0 END AS IS_FEE_DISCOUNT,
		CAST(CASE WHEN INSTR(FEE_STR, '/')&gt;0 THEN
			SUBSTR(FEE_STR, INSTR(FEE_STR, '/')+1)
			ELSE 0
		END AS INTEGER) AS FEE_AFTER_DISCOUNT,
		CAST(REPLACE(REPLACE(VOICE_MIN_STR, 'unlim', ''), '/', '') AS INTEGER) AS VOICE_MIN,
		CAST(CASE WHEN DATA_GB_STR LIKE '%nlim%' THEN 999 
			ELSE DATA_GB_STR
		END AS INTEGER) AS DATA_GB,
		USAGE,
		INTERNET_EXTRA
	FROM MARKET
	WHERE REPORT_DATE = (SELECT MAX_DATE FROM DATES)
	
)

SELECT
    REGION_NAME,
	OPERATOR,
	CASE WHEN COUNT(TARIFF_NAME) OVER (PARTITION BY REGION_NAME, OPERATOR, TARIFF_NAME) &gt; 1 THEN
		TARIFF_NAME || ' ' || CAST(COUNT(TARIFF_NAME) OVER (
			PARTITION BY REGION_NAME, OPERATOR, TARIFF_NAME
				ORDER BY VOICE_MIN, DATA_GB
				ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
		) AS TEXT) ELSE TARIFF_NAME
	END AS TARIFF,
	FEE_TYPE,
	FEE,
	IS_FEE_DISCOUNT,
	FEE_AFTER_DISCOUNT,
	VOICE_MIN,
	DATA_GB,
	USAGE,
	INTERNET_EXTRA
FROM A
</sql><sql name="SQL 3">WITH SCE AS (
	SELECT SCENARIO_ID, REGION_NAME
		FROM SCENARIOS
		WHERE SCENARIO_NAME = 'Сценарий ДЕМО'
),

ACT AS (
	SELECT
		'Tele2' AS OPERATOR, TARIFF, FEE_TYPE, FEE, IS_FEE_DISCOUNT, 
		FEE_AFTER_DISCOUNT, VOICE_MIN, DATA_GB, USAGE, INTERNET_EXTRA, ACTION
	FROM ACTIONS
	WHERE SCENARIO_ID = (SELECT SCENARIO_ID FROM SCE)	
),

MAR AS (
	SELECT
		OPERATOR, TARIFF, FEE_TYPE, FEE, IS_FEE_DISCOUNT,
		FEE_AFTER_DISCOUNT, VOICE_MIN, DATA_GB, USAGE, INTERNET_EXTRA, NULL AS ACTION
	FROM MARKET_CLEAN
	WHERE REGION_NAME = (SELECT REGION_NAME FROM SCE)
),

MAR_ACT AS (
	SELECT
		U.*,
		ROW_NUMBER() OVER() AS ID
	FROM (SELECT * FROM ACT
			UNION ALL
			SELECT * FROM MAR) U
)

SELECT MAR_ACT.*, MAR_ACT1.ID AS ID_NEW
FROM MAR_ACT
LEFT JOIN MAR_ACT as MAR_ACT1
	ON MAR_ACT.OPERATOR = MAR_ACT1.OPERATOR
	AND MAR_ACT.TARIFF = MAR_ACT1.TARIFF
	AND MAR_ACT.ID &lt;&gt; MAR_ACT1.ID
	AND MAR_ACT1.ACTION = 'Изменить'
</sql><sql name="Edit View MARKET_CLEAN">DROP VIEW &quot;main&quot;.&quot;MARKET_CLEAN&quot;;
CREATE VIEW MARKET_CLEAN AS
WITH DATES AS (	
	SELECT MAX(REPORT_DATE) AS MAX_DATE
	FROM MARKET
),

A AS (
	SELECT
		REGION_NAME,
		OPERATOR,
		REPLACE(TARIFF_NAME, ' +', '+') AS TARIFF_NAME,
		FEE_TYPE,
		CAST(IS_SHELF AS INTEGER) AS IS_SHELF,
		CAST(CASE WHEN INSTR(FEE_STR, '/')&gt;0 THEN
			SUBSTR(FEE_STR, 1, INSTR(FEE_STR, '/')-1)
			ELSE FEE_STR
		END AS INTEGER) AS FEE,
		CASE WHEN FEE_STR LIKE '%/%' THEN 1 ELSE 0 END AS IS_FEE_DISCOUNT,
		CAST(CASE WHEN INSTR(FEE_STR, '/')&gt;0 THEN
			SUBSTR(FEE_STR, INSTR(FEE_STR, '/')+1)
			ELSE 0
		END AS INTEGER) AS FEE_AFTER_DISCOUNT,
		CAST(REPLACE(REPLACE(VOICE_MIN_STR, 'unlim', ''), '/', '') AS INTEGER) AS VOICE_MIN,
		CAST(CASE WHEN DATA_GB_STR LIKE '%nlim%' THEN 999 
			ELSE DATA_GB_STR
		END AS INTEGER) AS DATA_GB,
		USAGE,
		CASE INTERNET_EXTRA WHEN NULL THEN '' ELSE INTERNET_EXTRA END AS INTERNET_EXTRA
	FROM MARKET
	WHERE REPORT_DATE = (SELECT MAX_DATE FROM DATES)
	
)

SELECT
    REGION_NAME,
	OPERATOR,
	CASE WHEN COUNT(TARIFF_NAME) OVER (PARTITION BY REGION_NAME, OPERATOR, TARIFF_NAME) &gt; 1 THEN
		TARIFF_NAME || ' ' || CAST(COUNT(TARIFF_NAME) OVER (
			PARTITION BY REGION_NAME, OPERATOR, TARIFF_NAME
				ORDER BY VOICE_MIN, DATA_GB
				ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
		) AS TEXT) ELSE TARIFF_NAME
	END AS TARIFF,
	FEE_TYPE,
	FEE,
	IS_FEE_DISCOUNT,
	FEE_AFTER_DISCOUNT,
	VOICE_MIN,
	DATA_GB,
	USAGE,
	INTERNET_EXTRA
FROM A</sql><current_tab id="3"/></tab_sql></sqlb_project>
